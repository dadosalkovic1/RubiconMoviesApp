{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./search-result-shows.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./search-result-shows.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { SearchService } from '../services/search.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nlet SearchResultShowsComponent = class SearchResultShowsComponent {\n  constructor(router, route, searchService) {\n    this.router = router;\n    this.route = route;\n    this.searchService = searchService;\n    this.baseUrl = 'https://image.tmdb.org/t/p/w200/';\n    this.searchResults = [];\n    this.searchTerm = '';\n  }\n  onMovieClick(movieId, movieTitle, DetailsposterPath, overview) {\n    this.router.navigate(['/movie-details', movieId], {\n      state: {\n        title: movieTitle,\n        posterPath: DetailsposterPath,\n        movieOverview: overview\n      }\n    });\n  }\n  onShowClick(showId, showTitle, DetailsposterPath, overview) {\n    this.router.navigate(['/show-details', showId], {\n      state: {\n        title: showTitle,\n        posterPath: DetailsposterPath,\n        ShowOverview: overview,\n        id: showId\n      }\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.searchTerm = params['q'];\n      this.searchService.searchShows(this.searchTerm).subscribe(results => {\n        this.searchResults = results;\n      });\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: SearchService\n  }];\n};\nSearchResultShowsComponent = __decorate([Component({\n  selector: 'app-search-result-shows',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], SearchResultShowsComponent);\nexport { SearchResultShowsComponent };","map":{"version":3,"names":["Component","SearchService","Router","ActivatedRoute","SearchResultShowsComponent","constructor","router","route","searchService","baseUrl","searchResults","searchTerm","onMovieClick","movieId","movieTitle","DetailsposterPath","overview","navigate","state","title","posterPath","movieOverview","onShowClick","showId","showTitle","ShowOverview","id","ngOnInit","queryParams","subscribe","params","searchShows","results","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Administrator\\Desktop\\RubiconMovieApp\\src\\app\\search-result-shows\\search-result-shows.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { SearchService } from '../services/search.service';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-search-result-shows',\r\n  templateUrl: './search-result-shows.component.html',\r\n  styleUrl: './search-result-shows.component.css'\r\n})\r\nexport class SearchResultShowsComponent {\r\n  baseUrl: string = 'https://image.tmdb.org/t/p/w200/';\r\n  \r\n  searchResults: any[]=[];\r\n  searchTerm: string='';\r\n  \r\n  constructor(private router:Router, private route: ActivatedRoute, private searchService: SearchService) {}\r\n  onMovieClick(movieId:number, movieTitle:any, DetailsposterPath:string, overview:string):void{\r\n\r\n    this.router.navigate(['/movie-details', movieId], {state:{title:movieTitle, posterPath:DetailsposterPath, movieOverview: overview}});\r\n  }\r\n  onShowClick(showId:number, showTitle:any, DetailsposterPath:string, overview:string):void{\r\n    this.router.navigate(['/show-details', showId], {state:{title:showTitle, posterPath:DetailsposterPath, ShowOverview: overview,id:showId}});\r\n  }\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.searchTerm = params['q'];\r\n      \r\n      this.searchService.searchShows(this.searchTerm).subscribe((results: any[]) => {\r\n        this.searchResults = results;\r\n        \r\n      });\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,MAAM,EAACC,cAAc,QAAQ,iBAAiB;AAMhD,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAMrCC,YAAoBC,MAAa,EAAUC,KAAqB,EAAUC,aAA4B;IAAlF,KAAAF,MAAM,GAANA,MAAM;IAAiB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,aAAa,GAAbA,aAAa;IALvF,KAAAC,OAAO,GAAW,kCAAkC;IAEpD,KAAAC,aAAa,GAAQ,EAAE;IACvB,KAAAC,UAAU,GAAS,EAAE;EAEoF;EACzGC,YAAYA,CAACC,OAAc,EAAEC,UAAc,EAAEC,iBAAwB,EAAEC,QAAe;IAEpF,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,gBAAgB,EAAEJ,OAAO,CAAC,EAAE;MAACK,KAAK,EAAC;QAACC,KAAK,EAACL,UAAU;QAAEM,UAAU,EAACL,iBAAiB;QAAEM,aAAa,EAAEL;MAAQ;IAAC,CAAC,CAAC;EACtI;EACAM,WAAWA,CAACC,MAAa,EAAEC,SAAa,EAAET,iBAAwB,EAAEC,QAAe;IACjF,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,eAAe,EAAEM,MAAM,CAAC,EAAE;MAACL,KAAK,EAAC;QAACC,KAAK,EAACK,SAAS;QAAEJ,UAAU,EAACL,iBAAiB;QAAEU,YAAY,EAAET,QAAQ;QAACU,EAAE,EAACH;MAAM;IAAC,CAAC,CAAC;EAC5I;EACAI,QAAQA,CAAA;IACN,IAAI,CAACpB,KAAK,CAACqB,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACnB,UAAU,GAAGmB,MAAM,CAAC,GAAG,CAAC;MAE7B,IAAI,CAACtB,aAAa,CAACuB,WAAW,CAAC,IAAI,CAACpB,UAAU,CAAC,CAACkB,SAAS,CAAEG,OAAc,IAAI;QAC3E,IAAI,CAACtB,aAAa,GAAGsB,OAAO;MAE9B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;;;;;;;;AAvBU7B,0BAA0B,GAAA8B,UAAA,EALtClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,yBAAyB;EACnCC,QAAA,EAAAC,oBAAmD;;CAEpD,CAAC,C,EACWjC,0BAA0B,CAwBtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}