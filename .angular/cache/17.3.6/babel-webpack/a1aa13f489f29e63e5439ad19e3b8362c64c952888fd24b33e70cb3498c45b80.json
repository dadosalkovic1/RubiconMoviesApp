{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet MovieService = class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = '5e1ed90c95e0ac41fa9d2817783fab51';\n  }\n  getTopRatedMovies() {\n    return this.http.get(`${this.baseUrl}/movie/top_rated?api_key=${this.apiKey}`);\n  }\n  getMovieDetails(movieId) {\n    return this.http.get(`${this.baseUrl}/movie/${movieId}?api_key=${this.apiKey}`);\n  }\n  getTopRatedShows() {\n    return this.http.get(`${this.baseUrl}/tv/top_rated?api_key=${this.apiKey}`);\n  }\n  getShowVideo(movieId) {\n    return this.http.get(`${this.baseUrl}/tv/${movieId}/videos?api_key=${this.apiKey}`);\n  }\n  getMovieVideo(movieId) {\n    return this.http.get(`${this.baseUrl}/movie/${movieId}/videos?api_key=${this.apiKey}`);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nMovieService = __decorate([Injectable({\n  providedIn: 'root'\n})], MovieService);\nexport { MovieService };","map":{"version":3,"names":["Injectable","HttpClient","MovieService","constructor","http","baseUrl","apiKey","getTopRatedMovies","get","getMovieDetails","movieId","getTopRatedShows","getShowVideo","getMovieVideo","_","__decorate","providedIn"],"sources":["C:\\Users\\Administrator\\Desktop\\RubiconMovieApp\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\nprivate baseUrl = 'https://api.themoviedb.org/3';\r\nprivate apiKey = '5e1ed90c95e0ac41fa9d2817783fab51'\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTopRatedMovies():Observable<any>{\r\n    return this.http.get(`${this.baseUrl}/movie/top_rated?api_key=${this.apiKey}`);\r\n  }\r\n\r\n  getMovieDetails(movieId: number):Observable<any>{\r\n  return this.http.get(`${this.baseUrl}/movie/${movieId}?api_key=${this.apiKey}`);\r\n  }\r\n\r\n  getTopRatedShows():Observable<any>{\r\n  return this.http.get(`${this.baseUrl}/tv/top_rated?api_key=${this.apiKey}`);\r\n  }\r\n\r\n  getShowVideo(movieId:any):Observable<any>{\r\n  return this.http.get(`${this.baseUrl}/tv/${movieId}/videos?api_key=${this.apiKey}`);\r\n  }\r\n\r\n  getMovieVideo(movieId:any):Observable<any>{\r\n  return this.http.get(`${this.baseUrl}/movie/${movieId}/videos?api_key=${this.apiKey}`);\r\n  }\r\n\r\n  }\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAO1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHlB,KAAAC,OAAO,GAAG,8BAA8B;IACxC,KAAAC,MAAM,GAAG,kCAAkC;EAET;EAExCC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,4BAA4B,IAAI,CAACC,MAAM,EAAE,CAAC;EAChF;EAEAG,eAAeA,CAACC,OAAe;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,UAAUK,OAAO,YAAY,IAAI,CAACJ,MAAM,EAAE,CAAC;EAC/E;EAEAK,gBAAgBA,CAAA;IAChB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,yBAAyB,IAAI,CAACC,MAAM,EAAE,CAAC;EAC3E;EAEAM,YAAYA,CAACF,OAAW;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,OAAOK,OAAO,mBAAmB,IAAI,CAACJ,MAAM,EAAE,CAAC;EACnF;EAEAO,aAAaA,CAACH,OAAW;IACzB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,OAAO,UAAUK,OAAO,mBAAmB,IAAI,CAACJ,MAAM,EAAE,CAAC;EACtF;EAAC,QAAAQ,CAAA,G;;;;AAxBUZ,YAAY,GAAAa,UAAA,EAHxBf,UAAU,CAAC;EACVgB,UAAU,EAAE;CACb,CAAC,C,EACWd,YAAY,CA0BtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}