{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./movie-details.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./movie-details.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { MovieService } from '../services/movie.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nlet MovieDetailsComponent = class MovieDetailsComponent {\n  constructor(sanitizer, route, router, movieService) {\n    this.sanitizer = sanitizer;\n    this.route = route;\n    this.router = router;\n    this.movieService = movieService;\n    this.movieName = '';\n    this.completeUrl = '';\n    this.Description = '';\n    this.VideoUrl = 'https://www.youtube.com/embed/';\n  }\n  ngOnInit() {\n    this.movieId = history.state.id;\n    this.getMovieVideo();\n    this.movieName = history.state.title;\n    this.completeUrl = history.state.posterPath;\n    this.Description = history.state.movieOverview;\n  }\n  goBack() {\n    this.router.navigateByUrl('/movies');\n  }\n  getMovieVideo() {\n    this.movieService.getMovieVideo(this.movieId).subscribe(data => {\n      this.VideoKey = data.results[0]['key'];\n      this.VideoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.VideoUrl + this.VideoKey);\n      if (this.VideoKey) {\n        this.HaveTrailer = true;\n      } else {\n        this.HaveTrailer = false;\n      }\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: DomSanitizer\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }, {\n    type: MovieService\n  }];\n};\nMovieDetailsComponent = __decorate([Component({\n  selector: 'app-movie-details',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], MovieDetailsComponent);\nexport { MovieDetailsComponent };","map":{"version":3,"names":["Component","MovieService","Router","ActivatedRoute","DomSanitizer","MovieDetailsComponent","constructor","sanitizer","route","router","movieService","movieName","completeUrl","Description","VideoUrl","ngOnInit","movieId","history","state","id","getMovieVideo","title","posterPath","movieOverview","goBack","navigateByUrl","subscribe","data","VideoKey","results","bypassSecurityTrustResourceUrl","HaveTrailer","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Administrator\\Desktop\\RubiconMovieApp\\src\\app\\movie-details\\movie-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MovieService } from '../services/movie.service';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-movie-details',\r\n  templateUrl: './movie-details.component.html',\r\n  styleUrl: './movie-details.component.css'\r\n})\r\n\r\nexport class MovieDetailsComponent  implements OnInit{\r\n constructor(private sanitizer:DomSanitizer,private route:ActivatedRoute, private router:Router,private movieService:MovieService){}\r\n\r\n  movieName:string='';\r\n  completeUrl:string='';\r\n  Description:string='';\r\n  movieId:any;\r\n  VideoUrl:any='https://www.youtube.com/embed/';\r\n  VideoKey:any;\r\n  HaveTrailer!: boolean;\r\n\r\nngOnInit(): void {\r\n  this.movieId=history.state.id;\r\n  this.getMovieVideo();\r\n  this.movieName=history.state.title;\r\n  this.completeUrl=history.state.posterPath;\r\n  this.Description=history.state.movieOverview;\r\n  \r\n}\r\n\r\ngoBack(): void {\r\n  this.router.navigateByUrl('/movies');\r\n} \r\ngetMovieVideo(){\r\n  this.movieService.getMovieVideo(this.movieId).subscribe((data:any)=>{\r\n  this.VideoKey=data.results[0]['key'];\r\n  this.VideoUrl=this.sanitizer.bypassSecurityTrustResourceUrl(this.VideoUrl+this.VideoKey);\r\nif(this.VideoKey){\r\n  this.HaveTrailer = true;\r\n}\r\nelse{\r\n  this.HaveTrailer = false;\r\n  \r\n}\r\n})   \r\n  };\r\n}"],"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,MAAM,EAACC,cAAc,QAAQ,iBAAiB;AACvD,SAASC,YAAY,QAAyB,2BAA2B;AAOlE,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EACjCC,YAAoBC,SAAsB,EAASC,KAAoB,EAAUC,MAAa,EAASC,YAAyB;IAA5G,KAAAH,SAAS,GAATA,SAAS;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAAgB,KAAAC,YAAY,GAAZA,YAAY;IAElH,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,WAAW,GAAQ,EAAE;IACrB,KAAAC,WAAW,GAAQ,EAAE;IAErB,KAAAC,QAAQ,GAAK,gCAAgC;EANoF;EAUnIC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,GAACC,OAAO,CAACC,KAAK,CAACC,EAAE;IAC7B,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACT,SAAS,GAACM,OAAO,CAACC,KAAK,CAACG,KAAK;IAClC,IAAI,CAACT,WAAW,GAACK,OAAO,CAACC,KAAK,CAACI,UAAU;IACzC,IAAI,CAACT,WAAW,GAACI,OAAO,CAACC,KAAK,CAACK,aAAa;EAE9C;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACf,MAAM,CAACgB,aAAa,CAAC,SAAS,CAAC;EACtC;EACAL,aAAaA,CAAA;IACX,IAAI,CAACV,YAAY,CAACU,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC,CAACU,SAAS,CAAEC,IAAQ,IAAG;MACpE,IAAI,CAACC,QAAQ,GAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;MACpC,IAAI,CAACf,QAAQ,GAAC,IAAI,CAACP,SAAS,CAACuB,8BAA8B,CAAC,IAAI,CAAChB,QAAQ,GAAC,IAAI,CAACc,QAAQ,CAAC;MAC1F,IAAG,IAAI,CAACA,QAAQ,EAAC;QACf,IAAI,CAACG,WAAW,GAAG,IAAI;MACzB,CAAC,MACG;QACF,IAAI,CAACA,WAAW,GAAG,KAAK;MAE1B;IACA,CAAC,CAAC;EACA;EAAC,QAAAC,CAAA,G;;;;;;;;;;AAnCU3B,qBAAqB,GAAA4B,UAAA,EANjCjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,mBAAmB;EAC7BC,QAAA,EAAAC,oBAA6C;;CAE9C,CAAC,C,EAEW/B,qBAAqB,CAoCjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}