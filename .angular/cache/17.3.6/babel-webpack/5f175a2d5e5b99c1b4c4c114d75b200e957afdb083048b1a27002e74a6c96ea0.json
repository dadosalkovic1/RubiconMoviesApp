{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./show-details.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./show-details.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { MovieService } from '../services/movie.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nlet ShowDetailsComponent = class ShowDetailsComponent {\n  constructor(sanitizer, route, router, movieService) {\n    this.sanitizer = sanitizer;\n    this.route = route;\n    this.router = router;\n    this.movieService = movieService;\n    this.showName = '';\n    this.completeUrl = '';\n    this.Description = '';\n    this.VideoUrl = 'https://www.youtube.com/embed/';\n  }\n  ngOnInit() {\n    this.showId = history.state.id;\n    this.getShowVideo();\n    this.showName = history.state.title;\n    this.completeUrl = history.state.posterPath;\n    this.Description = history.state.ShowOverview;\n  }\n  goBack() {\n    this.router.navigateByUrl('/shows');\n  }\n  getShowVideo() {\n    this.movieService.getShowVideo(this.showId).subscribe(data => {\n      this.VideoKey = data.results[0]['key'];\n      this.VideoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.VideoUrl + this.VideoKey);\n      if (this.VideoKey) {\n        this.HaveTrailer = true;\n      } else {\n        this.HaveTrailer = false;\n      }\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: DomSanitizer\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }, {\n    type: MovieService\n  }];\n};\nShowDetailsComponent = __decorate([Component({\n  selector: 'app-show-details',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ShowDetailsComponent);\nexport { ShowDetailsComponent };","map":{"version":3,"names":["Component","MovieService","Router","ActivatedRoute","DomSanitizer","ShowDetailsComponent","constructor","sanitizer","route","router","movieService","showName","completeUrl","Description","VideoUrl","ngOnInit","showId","history","state","id","getShowVideo","title","posterPath","ShowOverview","goBack","navigateByUrl","subscribe","data","VideoKey","results","bypassSecurityTrustResourceUrl","HaveTrailer","_","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Administrator\\Desktop\\RubiconMovieApp\\src\\app\\show-details\\show-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MovieService } from '../services/movie.service';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-show-details',\r\n  templateUrl: './show-details.component.html',\r\n  styleUrl: './show-details.component.css'\r\n})\r\nexport class ShowDetailsComponent implements OnInit{\r\n\r\n  constructor(private sanitizer:DomSanitizer,private route:ActivatedRoute, private router:Router, private movieService:MovieService){}\r\n \r\nshowName:string='';\r\ncompleteUrl:string='';\r\nDescription:string='';\r\nVideoKey:any;\r\nshowId:any;\r\nHaveTrailer!: boolean;\r\nVideoUrl:any='https://www.youtube.com/embed/';\r\n\r\n  ngOnInit(): void {\r\n    this.showId=history.state.id;\r\n    this.getShowVideo();\r\n    this.showName=history.state.title;\r\n    this.completeUrl=history.state.posterPath;\r\n    this.Description=history.state.ShowOverview;\r\n    \r\n  }\r\n  goBack(): void {\r\n    this.router.navigateByUrl('/shows');\r\n  }\r\n\r\n  getShowVideo(){\r\n    this.movieService.getShowVideo(this.showId).subscribe((data:any)=>{\r\n    this.VideoKey = data.results[0]['key'];\r\n    this.VideoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.VideoUrl + this.VideoKey);\r\n  if(this.VideoKey){\r\n    this.HaveTrailer = true;\r\n      }\r\n  else{\r\n    this.HaveTrailer = false;\r\n      }\r\n      \r\n    });\r\n  }\r\n  \r\n \r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,MAAM,EAACC,cAAc,QAAQ,iBAAiB;AAEvD,SAASC,YAAY,QAAyB,2BAA2B;AAOlE,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAE/BC,YAAoBC,SAAsB,EAASC,KAAoB,EAAUC,MAAa,EAAUC,YAAyB;IAA7G,KAAAH,SAAS,GAATA,SAAS;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,YAAY,GAAZA,YAAY;IAEtH,KAAAC,QAAQ,GAAQ,EAAE;IAClB,KAAAC,WAAW,GAAQ,EAAE;IACrB,KAAAC,WAAW,GAAQ,EAAE;IAIrB,KAAAC,QAAQ,GAAK,gCAAgC;EARwF;EAUnIC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAACC,OAAO,CAACC,KAAK,CAACC,EAAE;IAC5B,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACT,QAAQ,GAACM,OAAO,CAACC,KAAK,CAACG,KAAK;IACjC,IAAI,CAACT,WAAW,GAACK,OAAO,CAACC,KAAK,CAACI,UAAU;IACzC,IAAI,CAACT,WAAW,GAACI,OAAO,CAACC,KAAK,CAACK,YAAY;EAE7C;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACf,MAAM,CAACgB,aAAa,CAAC,QAAQ,CAAC;EACrC;EAEAL,YAAYA,CAAA;IACV,IAAI,CAACV,YAAY,CAACU,YAAY,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACU,SAAS,CAAEC,IAAQ,IAAG;MAClE,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;MACtC,IAAI,CAACf,QAAQ,GAAG,IAAI,CAACP,SAAS,CAACuB,8BAA8B,CAAC,IAAI,CAAChB,QAAQ,GAAG,IAAI,CAACc,QAAQ,CAAC;MAC9F,IAAG,IAAI,CAACA,QAAQ,EAAC;QACf,IAAI,CAACG,WAAW,GAAG,IAAI;MACrB,CAAC,MACD;QACF,IAAI,CAACA,WAAW,GAAG,KAAK;MACtB;IAEF,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;;;;;;;;;;AApCU3B,oBAAoB,GAAA4B,UAAA,EALhCjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,kBAAkB;EAC5BC,QAAA,EAAAC,oBAA4C;;CAE7C,CAAC,C,EACW/B,oBAAoB,CAuChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}